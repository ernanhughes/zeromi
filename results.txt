============================= test session starts =============================
platform win32 -- Python 3.11.4, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\ernan\Project\zeromi\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\ernan\Project\zeromi
configfile: pyproject.toml
collecting ... collected 12 items

tests/test_core.py::test_normalization_quantization PASSED               [  8%]
tests/test_core.py::test_zeromodel_example PASSED                        [ 16%]
tests/test_core.py::test_duckdb_integration PASSED                       [ 25%]
tests/test_core.py::test_hierarchical_clustering PASSED                  [ 33%]
tests/test_core.py::test_tile_processing PASSED                          [ 41%]
tests/test_core.py::test_advanced_sql_queries PASSED                     [ 50%]
tests/test_core.py::test_metadata_handling PASSED                        [ 58%]
tests/test_core.py::test_performance_scalability SKIPPED (Temporaril...) [ 66%]
tests/test_core.py::test_hierarchical_navigation PASSED                  [ 75%]
tests/test_hierarchical_workflow.py::test_hierarchical_vpm_workflow PASSED [ 83%]
tests/test_workflow.py::test_complete_zeromodel_workflow PASSED          [ 91%]
tests/test_xor.py::test_xor_validation FAILED                            [100%]

================================== FAILURES ===================================
_____________________________ test_xor_validation _____________________________

    def test_xor_validation():
        """Full XOR validation comparing ZeroModel and traditional ML (SVM)"""
    
        # 1. Generate XOR dataset
        np.random.seed(42)
        X = np.random.rand(1000, 2) + 0.1 * np.random.randn(1000, 2)
        X = np.clip(X, 0, 1)
        y = np.logical_xor(X[:, 0] > 0.5, X[:, 1] > 0.5).astype(int)
    
        # 2. Train/Test split
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
        # 3. SVM model
        svm = SVC(kernel="rbf", C=10, gamma="scale", probability=True)
        svm.fit(X_train, y_train)
        svm_acc = accuracy_score(y_test, svm.predict(X_test))
    
        # 4. Define feature extractor
        def extract_features(data):
            f = np.zeros((data.shape[0], 5))
            f[:, 0] = np.linalg.norm(data - 0.5, axis=1)                  # distance from center
            f[:, 1] = data[:, 0] * data[:, 1]                             # product
            f[:, 2] = data[:, 0] + data[:, 1]                             # sum
            f[:, 3] = np.abs(data[:, 0] - data[:, 1])                     # abs diff
            f[:, 4] = np.arctan2(data[:, 1] - 0.5, data[:, 0] - 0.5)      # angle
            return f
    
        metric_names = [
            "distance_from_center", "coordinate_product", "coordinate_sum",
            "coordinate_difference", "angle_from_center"
        ]
    
        # 5. Normalize using train min/max
        X_train_metrics = extract_features(X_train)
        X_test_metrics = extract_features(X_test)
    
        min_vals = X_train_metrics.min(axis=0)
        max_vals = X_train_metrics.max(axis=0)
        ranges = np.maximum(max_vals - min_vals, 1e-6)
    
        norm_train = (X_train_metrics - min_vals) / ranges
        norm_test = (X_test_metrics - min_vals) / ranges
    
        # 6. Train ZeroModel on training metrics
    
    
        zm_train = ZeroModel(metric_names, precision=16)
        # Use a better SQL query for XOR - this is critical!
        # The test data has 5 metrics: distance_from_center, coordinate_product, etc.
        zm_train.prepare(norm_train, "SELECT * FROM virtual_index ORDER BY coordinate_difference DESC")
    
        # 7. Predict on test samples using fresh ZeroModels
        y_pred_zeromi = []
        for point in norm_test:
            zm_point = ZeroModel(metric_names, precision=16)
            zm_point.prepare(point[None, :], "SELECT * FROM virtual_index ORDER BY coordinate_difference DESC")
            # MUST CALL PROCESS on the single point data
            _, rel = zm_point.get_decision()
            # Use a more appropriate threshold for XOR
            y_pred_zeromi.append(1 if rel > 0.3 else 0)
    
        zeromi_acc = accuracy_score(y_test, y_pred_zeromi)
    
        print(f"\u2705 SVM Accuracy:       {svm_acc:.4f}")
        print(f"\u2705 ZeroModel Accuracy: {zeromi_acc:.4f}")
        # For XOR, allow slightly higher deviation since it's non-linear
>       assert abs(svm_acc - zeromi_acc) < 0.5  # Accept 10% deviation  ##TODO fix this
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 0.55 < 0.5
E        +  where 0.55 = abs((0.985 - 0.435))

tests\test_xor.py:78: AssertionError
---------------------------- Captured stdout call -----------------------------
\u2705 SVM Accuracy:       0.9850\n\u2705 ZeroModel Accuracy: 0.4350
------------------------------ Captured log call ------------------------------
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (800, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 800 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [59, 13, 663, 182, 14, 614, 18, 321, 647, 496]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [59, 13, 663, 182, 14, 614, 18, 321, 647, 496, 552, 555, 694, 342, 508, 665, 618, 160, 528, 424, 675, 503, 258, 412, 362, 161, 590, 595, 213, 326, 125, 526, 493, 772, 132, 653, 20, 34, 152, 273, 765, 543, 505, 184, 117, 330, 64, 26, 44, 630, 41, 661, 90, 415, 374, 308, 709, 574, 613, 183, 562, 740, 525, 721, 292, 738, 433, 551, 202, 705, 779, 340, 701, 609, 50, 485, 109, 402, 784, 575, 375, 174, 592, 189, 351, 60, 586, 736, 95, 305, 645, 635, 465, 368, 279, 430, 409, 43, 429, 291, 231, 610, 245, 628, 394, 417, 173, 604, 576, 770, 791, 666, 782, 239, 108, 194, 419, 759, 468, 274, 790, 679, 40, 597, 312, 518, 544, 720, 237, 549, 670, 499, 146, 294, 360, 337, 147, 388, 172, 406, 228, 114, 405, 677, 121, 456, 235, 261, 96, 58, 777, 295, 608, 145, 633, 561, 205, 706, 134, 699, 507, 737, 612, 293, 82, 333, 500, 47, 471, 719, 786, 685, 475, 781, 695, 486, 300, 541, 373, 521, 319, 687, 89, 236, 545, 30, 662, 467, 280, 365, 536, 301, 598, 215, 197, 86, 212, 99, 703, 352, 216, 219, 657, 571, 584, 349, 688, 42, 79, 693, 168, 63, 796, 538, 256, 570, 568, 188, 386, 153, 12, 207, 5, 787, 767, 698, 359, 314, 250, 799, 457, 696, 795, 116, 222, 214, 344, 354, 383, 115, 513, 444, 119, 54, 377, 83, 48, 69, 617, 126, 385, 238, 6, 133, 193, 447, 327, 676, 218, 659, 254, 144, 754, 589, 567, 678, 379, 478, 459, 750, 624, 247, 431, 522, 229, 516, 104, 283, 170, 395, 535, 381, 24, 346, 101, 564, 232, 572, 792, 61, 627, 376, 225, 644, 110, 623, 357, 615, 401, 180, 537, 454, 509, 131, 591, 285, 31, 512, 142, 272, 227, 268, 271, 625, 517, 100, 139, 569, 135, 631, 334, 484, 445, 655, 764, 669, 418, 578, 209, 533, 176, 691, 758, 399, 251, 347, 241, 704, 332, 223, 689, 120, 84, 304, 384, 539, 198, 136, 652, 481, 753, 554, 53, 339, 149, 420, 74, 641, 105, 746, 141, 752, 45, 122, 497, 75, 563, 203, 733, 502, 553, 27, 785, 341, 700, 302, 580, 313, 449, 382, 542, 601, 204, 606, 363, 702, 483, 367, 328, 263, 39, 747, 789, 169, 487, 155, 113, 206, 495, 587, 734, 708, 76, 735, 448, 46, 158, 88, 490, 315, 751, 546, 370, 15, 281, 391, 769, 311, 722, 240, 683, 70, 515, 179, 353, 778, 259, 619, 498, 727, 432, 210, 723, 49, 345, 480, 642, 191, 768, 244, 389, 323, 248, 520, 474, 548, 36, 66, 130, 673, 103, 148, 396, 21, 72, 788, 773, 731, 643, 482, 343, 252, 514, 226, 603, 275, 338, 2, 230, 403, 462, 410, 270, 260, 674, 585, 97, 681, 350, 760, 423, 390, 783, 729, 668, 439, 605, 303, 290, 780, 65, 3, 638, 175, 453, 464, 372, 150, 233, 556, 400, 730, 477, 186, 472, 200, 140, 127, 306, 167, 529, 192, 317, 741, 163, 724, 55, 366, 138, 336, 255, 442, 195, 762, 185, 744, 616, 4, 32, 398, 531, 289, 298, 725, 67, 404, 397, 329, 154, 540, 166, 11, 157, 607, 776, 355, 325, 506, 458, 378, 583, 510, 479, 588, 577, 732, 242, 364, 422, 318, 25, 124, 435, 118, 771, 408, 102, 636, 582, 276, 434, 112, 649, 324, 437, 599, 137, 650, 692, 71, 743, 371, 0, 286, 19, 267, 16, 651, 718, 594, 171, 81, 253, 224, 246, 123, 387, 469, 93, 177, 425, 463, 356, 7, 717, 749, 667, 201, 35, 392, 22, 739, 208, 156, 421, 600, 331, 111, 159, 266, 278, 73, 757, 151, 428, 602, 361, 713, 413, 559, 196, 596, 648, 220, 8, 277, 287, 452, 296, 164, 682, 793, 530, 17, 501, 455, 494, 523, 414, 711, 488, 547, 621, 369, 393, 436, 38, 470, 511, 85, 622, 257, 637, 527, 489, 460, 763, 94, 798, 37, 766, 288, 29, 249, 299, 565, 56, 656, 690, 716, 715, 10, 680, 129, 476, 1, 106, 620, 461, 646, 710, 774, 593, 438, 440, 265, 407, 427, 707, 640, 473, 664, 107, 77, 748, 80, 416, 307, 211, 519, 451, 28, 626, 686, 23, 714, 309, 573, 566, 52, 745, 550, 78, 697, 262, 660, 358, 672, 165, 581, 726, 9, 316, 632, 178, 348, 755, 557, 181, 98, 654, 426, 297, 728, 68, 441, 190, 446, 532, 162, 658, 62, 797, 380, 756, 560, 269, 264, 634, 335, 492, 33, 284, 217, 128, 684, 51, 322, 558, 712, 282, 411, 534, 91, 775, 221, 199, 794, 579, 611, 450, 761, 310, 234, 443, 243, 466, 143, 742, 639, 320, 629, 671, 187, 491, 87, 57, 92, 504, 524], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (800, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [59, 13, 663, 182, 14, 614, 18, 321, 647, 496]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (800, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
DEBUG    zeromodel.core:core.py:46 Initializing ZeroModel with metrics: ['distance_from_center', 'coordinate_product', 'coordinate_sum', 'coordinate_difference', 'angle_from_center'], precision: 16
INFO     zeromodel.core:core.py:63 ZeroModel initialized with 5 metrics.
INFO     zeromodel.core:core.py:111 Preparing ZeroModel with data shape (1, 5) and query: 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'
DEBUG    zeromodel.core:core.py:137 Updating DynamicNormalizer with new data ranges.
DEBUG    zeromodel.core:core.py:140 Normalizer updated. Applying normalization to the data.
DEBUG    zeromodel.core:core.py:143 Data normalized successfully.
DEBUG    zeromodel.core:core.py:166 DuckDB virtual_index schema matches self.metric_names.
DEBUG    zeromodel.core:core.py:173 Loading NORMALIZED score_matrix data into DuckDB virtual_index table.
DEBUG    zeromodel.core:core.py:188 Successfully loaded 1 normalized rows into DuckDB.
DEBUG    zeromodel.core:core.py:195 Setting SQL task.
INFO     zeromodel.core:core.py:443 Setting SQL task: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:556 Analyzing SQL query with data: SELECT * FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:572 Executing modified query for analysis: SELECT row_id FROM virtual_index ORDER BY coordinate_difference DESC
DEBUG    zeromodel.core:core.py:580 Document order determined by DuckDB query execution: [0]...
DEBUG    zeromodel.core:core.py:596 Primary sort metric identified from query: 'coordinate_difference' (index 3)
INFO     zeromodel.core:core.py:609 SQL query analysis (with data) complete.
DEBUG    zeromodel.core:core.py:449 SQL task set. Analysis: {'doc_order': [0], 'metric_order': [0, 1, 2, 3, 4], 'primary_sort_metric_index': 3, 'primary_sort_metric_name': 'coordinate_difference', 'original_query': 'SELECT * FROM virtual_index ORDER BY coordinate_difference DESC'}
DEBUG    zeromodel.core:core.py:201 SQL task set successfully.
DEBUG    zeromodel.core:core.py:208 Applying spatial organization based on SQL analysis.
DEBUG    zeromodel.core:core.py:630 Applying SQL-based organization (with data). Data shape: (1, 5)
DEBUG    zeromodel.core:core.py:645 Final validated document order (first 10): [0]...
DEBUG    zeromodel.core:core.py:664 Final validated metric order: [0, 1, 2, 3, 4]
INFO     zeromodel.core:core.py:668 SQL-based organization (with data) applied. Final matrix shape: (1, 5)
DEBUG    zeromodel.core:core.py:220 Spatial organization applied successfully.
INFO     zeromodel.core:core.py:230 ZeroModel preparation complete. Ready for encode/get_decision/get_critical_tile/etc.
DEBUG    zeromodel.core:core.py:795 Making decision with context size 3
DEBUG    zeromodel.core:core.py:810 Actual decision context: 1 docs x 5 metrics
DEBUG    zeromodel.core:core.py:816 Context data shape for decision: (1, 5)
DEBUG    zeromodel.core:core.py:831 Calculated positional weights for context.
DEBUG    zeromodel.core:core.py:843 Calculated weighted relevance score: 0.5000
DEBUG    zeromodel.core:core.py:858 Top 5 rows of sorted_matrix:
DEBUG    zeromodel.core:core.py:860 Row 0: [0.5, 0.5, 0.5, 0.5, 0.5]
DEBUG    zeromodel.core:core.py:862 Top 5 document indices (doc_order): [0]
INFO     zeromodel.core:core.py:864 Decision made: Document index 0, Relevance 0.5000
=========================== short test summary info ===========================
FAILED tests/test_xor.py::test_xor_validation - assert 0.55 < 0.5
=================== 1 failed, 10 passed, 1 skipped in 4.00s ===================
